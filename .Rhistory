library(dplyr)
library(gtsummary)
library(here)
here::i_am("code/00_clean_data.R")
library(dplyr)
library(gtsummary)
library(here)
here::i_am("code/00_clean_data.R")
data <- read.csv(absolute_path, header = TRUE)
absolute_path <- here::here('raw_data/ss.csv')
data <- read.csv(absolute_path, header = TRUE)
library(dplyr)
library(gtsummary)
library(here)
here::i_am("code/00_clean_data.R")
library(dplyr)
library(gtsummary)
library(here)
here::i_am("code/00_clean_data.R")
library(dplyr)
here::i_am("code/01_make_table.R")
here::i_am("code/02_make_scatter.R")
here::i_am(
"code/03_render_report.R"
)
`sleep_report.Rmd`
# Report Description
In my report, "Exploring Variations in Sleep Duration Across Occupations," I present:
here::i_am(
"report.Rmd"
)
# Read device frequency from output directory
device_frequency <- readRDS(
here::here("output/device_frequency.rds")
)
here::i_am(
"report.Rmd"
)
# Read device frequency from output directory
device_frequency <- readRDS(
here::here("output/device_frequency.rds")
)
watched_video <- readRDS(
here::here("output/watched_video.rds")
)
here::i_am("code/project_code.Rmd")
here::i_am(
"report.Rmd"
)
# Set the working directory to the directory containing the R Markdown file
here::i_am("code/project_code.Rmd")
absolute_path_to_data <- here::here("raw_data", "raw.xlsx")
# Read the Excel file into R as a data frame
data <- readxl::read_excel(absolute_path_to_data)
#cleaning names using janitor package
data <- janitor :: clean_names(data)
# Rename variables to more concise names
new_names <- c(
"timestamp",  "gender",  "skill_proficiency", "device_used","location","watch_time",
"companions",  "watch_before_class",  "playback_speed", "skip_button_used",
"pause_button_used","rewatch_video","video_ease_comparison", "future_video_watch",
"subscribe_to_channel",  "share_video","watch_recommended_videos", "youtube_advantages"
)
# Assign the new names to the dataset
names(data) <- new_names
library(knitr)
library(gtsummary)
# Create summary table
watched_video <- data %>%
select("gender", "location", "watch_before_class") %>%
tbl_summary(by = watch_before_class) %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Watch The Video Before Class**") %>%
add_overall() %>%
add_p()
watched_video
# Save summary table as RDS file
saveRDS(
watched_video,
file = here::here("output/watched_video.rds")
)
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Count the frequency of each device used by gender
device_frequency <- data %>%
count(gender, device_used)
# Create a bar plot using ggplot2
barplot <- ggplot(device_frequency, aes(x = device_used, y = n, fill = gender)) +
geom_bar(stat = "identity", position = position_dodge(width = 1)) +
labs(x = "Device Used", y = "Frequency", fill = "Gender") +
theme_minimal()
print(barplot)
# Save the plot as a PNG file
ggsave(
here::here("output/device_frequency.png"),
plot = barplot,
device = "png"
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
library(dplyr)
library(ggplot2)
library(FactoMineR)
library(here)
setwd("/Users/liuyingte/Desktop/Emory/BIOS/550/Final_project")
readRDS(here("output/table.RDS"))
readRDS(here("output/PCA.RDS"))
.libPaths()
install.packages("wesanderson")
renv::snapshot()
install.packages("wesanderson")
# Load pacman package
library(pacman)
# Use pacman install and load packages
p_load(gtsummary, tidyverse)
# Set working directory
setwd("/Users/justinnaidu/Library/CloudStorage/OneDrive-Personal/RSPH/Spring2024/BIOS544/FinalProject")
# Read data
data <- read.csv("diabetes.csv")
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
missing = "no"
) %>%
add_n() %>%
add_stat(
label = "Mean (SD)",
statistic = all_continuous() ~ "{mean} ({sd})"
) %>%
add_stat(
label = "Count (%)",
statistic = all_categorical() ~ "{n} / {N} ({p}%)"
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Descriptive Statistics**")
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
missing = "no"
) %>%
add_n()
# Creating table1 with descriptive statistics
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
missing = "no"
) %>%
add_n() %>%
add_stat(
label = "Mean (SD)",
statistic = all_continuous() ~ "{mean} ({sd})"
) %>%
add_stat(
label = "Count (%)",
statistic = all_categorical() ~ "{n} / {N} ({p}%)"
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Descriptive Statistics**")
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
missing = "no"
) %>%
add_n() %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Descriptive Statistics**")
table1
View(data)
library(gtsummary)
# Assuming you have loaded your dataset into a data frame named 'data'
# Define age categories
data$Age_Category <- cut(data$Age, breaks = c(20, 30, 40, 50, 60, 70, 80),
labels = c("20-29", "30-39", "40-49", "50-59", "60-69", "70-79"))
# Create table1 with stratification by age categories
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
strata = Age_Category,  # Stratify by age categories
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
add_p() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Create descriptive table (table1)
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = Outcome,
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
add_p() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Create descriptive table (table1)
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
add_p() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Create descriptive table (table1)
table1 <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Load pacman package
library(pacman)
# Use pacman install and load packages
p_load(gtsummary, tidyverse)
# Set working directory
setwd("/Users/justinnaidu/Library/CloudStorage/OneDrive-Personal/RSPH/Spring2024/BIOS544/FinalProject")
# Read data
data <- read.csv("diabetes.csv")
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't group by any variable
statistics = all_continuous() ~ "{mean} ({sd})", # Include mean and standard deviation for continuous variables
missing = "no", # Include missing data information
digits = list(everything() ~ 2) # Set the number of digits displayed
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
modify_column_hide(all_stat_cols()) # Hide columns with statistics
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't group by any variable
statistic = all_continuous() ~ "{mean} ± {sd}", # Include mean and standard deviation for continuous variables
missing = "no", # Include missing data information
digits = list(all_continuous() ~ 2) # Set the number of digits displayed
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't stratify by any variable
type = all_continuous() ~ "continuous2", # Display continuous variables on a second line
statistic = all_continuous() ~ "{mean} ± {sd}", # Include mean and standard deviation for continuous variables
missing = "no", # Hide missing data information
digits = all_continuous() ~ 2 # Set the number of digits displayed
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_caption("**Table 1. Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't stratify by any variable
type = all_continuous() ~ "continuous2", # Display continuous variables on a second line
statistic = all_continuous() ~ "{mean} ± {sd}", # Include mean and standard deviation for continuous variables
missing = "no", # Hide missing data information
digits = all_continuous() ~ 2 # Set the number of digits displayed
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_caption("**Table 1. Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't stratify by any variable
type = all_continuous() ~ "continuous2", # Display continuous variables on a second line
statistic = list(
all_continuous() ~ c("{mean} ± {sd}", "({min}:{max})"), # Include mean, sd, min, and max for continuous variables
all_dichotomous() ~ "{p}%", # Display percentages for dichotomous variables
all_categorical() ~ "{n} ({p}%)"), # Display counts and percentages for categorical variables
missing = "no", # Hide missing data information
digits = list(all_continuous() ~ 2), # Set the number of digits displayed
label = age ~ "Age (years)", # Provide more descriptive labels
spanner = "Variables" # Add a spanning header
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
add_overall() %>%
add_p() %>%
bold_p(t = 0.8) %>%
modify_caption("**Table 1. Pima Indians Diabetes Descriptive Statistics**")
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't stratify by any variable
type = all_continuous() ~ "continuous2", # Display continuous variables on a second line
statistic = list(
all_continuous() ~ c("{mean} ± {sd}", "({min}:{max})"), # Include mean, sd, min, and max for continuous variables
all_dichotomous() ~ "{p}%", # Display percentages for dichotomous variables
all_categorical() ~ "{n} ({p}%)"), # Display counts and percentages for categorical variables
missing = "no", # Hide missing data information
digits = list(all_continuous() ~ 2), # Set the number of digits displayed
label = age ~ "Age (years)" # Provide more descriptive labels
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
add_overall() %>%
add_p() %>%
bold_p(t = 0.8) %>%
modify_spanning_header(stat_1 + stat_2 ~ "Variables") %>% # Add a spanning header
modify_caption("**Table 1. Pima Indians Diabetes Descriptive Statistics**")
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
by = NULL, # Don't stratify by any variable
statistic = list(
all_continuous() ~ "{mean} ({sd})", # Mean and standard deviation for continuous variables
all_categorical() ~ "{n} / {N} ({p}%)", # Frequencies for categorical variables
all_dichotomous() ~ "{p}%" # Dichotomous variables displayed as percentages
),
missing = "no" # Hide missing data information
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
add_overall() %>%
add_p() %>%
bold_p(t = 0.05) %>%
theme_gtsummary_journal("lancet") # Apply Lancet journal theme
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
statistic = list(
all_continuous() ~ "{mean} ({sd})", # Mean and standard deviation for continuous variables
all_categorical() ~ "{n} / {N} ({p}%)", # Frequencies for categorical variables
all_dichotomous() ~ "{p}%" # Dichotomous variables displayed as percentages
),
missing = "no" # Hide missing data information
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
add_overall() %>%
add_p() %>%
bold_p(t = 0.05) %>%
theme_gtsummary_journal("lancet") # Apply Lancet journal theme
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
statistic = list(
all_continuous() ~ "{mean} ({sd})", # Mean and standard deviation for continuous variables
all_categorical() ~ "{n} / {N} ({p}%)", # Frequencies for categorical variables
all_dichotomous() ~ "{p}%" # Dichotomous variables displayed as percentages
),
missing = "no" # Hide missing data information
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
add_p() %>%
bold_p(t = 0.05) %>%
theme_gtsummary_journal("lancet") # Apply Lancet journal theme
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
statistic = list(
all_continuous() ~ "{mean} ({sd})", # Mean and standard deviation for continuous variables
all_categorical() ~ "{n} / {N} ({p}%)", # Frequencies for categorical variables
all_dichotomous() ~ "{p}%" # Dichotomous variables displayed as percentages
),
missing = "no" # Hide missing data information
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
bold_p(t = 0.05) %>%
theme_gtsummary_journal("lancet") # Apply Lancet journal theme
# Load necessary libraries
library(gtsummary)
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
statistic = list(
all_continuous() ~ "{mean} ({sd})", # Mean and standard deviation for continuous variables
all_categorical() ~ "{n} / {N} ({p}%)", # Frequencies for categorical variables
all_dichotomous() ~ "{p}%" # Dichotomous variables displayed as percentages
),
missing = "no" # Hide missing data information
) %>%
bold_labels() %>%
italicize_levels() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**") %>%
theme_gtsummary_journal("lancet") # Apply Lancet journal theme
# Create descriptive table (table1)
table1 <- data %>%
tbl_summary(
missing = "no"
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Pima Indians Diabetes Descriptive Statistics**")
# Print the table
table1
table_one <- data %>%
select(Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI, DiabetesPedigreeFunction, Age, Outcome) %>%
tbl_summary(
by = NULL, # no grouping needed for overall summary
missing = "no" # specify how to handle missing values
) %>%
bold_labels() %>%
italicize_levels() %>%
add_n() %>%
modify_header(label = "**Descriptive Statistics of Pima Indians Diabetes Dataset**")
# Print the table
table_one
# Load pacman package
library(pacman)
# Use pacman install and load packages
p_load(gtsummary, tidyverse, dplyr)
setwd("~/Documents/FinalProject")
renv::init()
renv::init()
renv::snapshot()
renv::status()
renv::snapshot()
renv::snapshot()
make install
renv::status()
